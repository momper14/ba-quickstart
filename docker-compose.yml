# /*******************************************************************************
#  * Copyright 2020 Redis Labs Inc.
#  * Copyright 2020 Intel Corporation.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  * in compliance with the License. You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software distributed under the License
#  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  * or implied. See the License for the specific language governing permissions and limitations under
#  * the License.
#  *
#  * @author: Jim White, Dell
#  * @author: Andre Srinivasan, Redis Labs
#  * @author: Leonard Goodell, Intel
#  * EdgeX Foundry, Geneva, version 1.2.0
#  * added: May 14, 2020
#  *******************************************************************************/

# NOTE:  this Docker Compose file does not contain the security services - namely the API Gateway
# and Secret Store

version: "3.4"

# all common shared environment variables defined here:
x-common-env-variables: &common-variables
  EDGEX_SECURITY_SECRET_STORE: "false"
  Registry_Host: edgex-core-consul
  Clients_CoreData_Host: edgex-core-data
  Clients_Data_Host: edgex-core-data
  Clients_Notifications_Host: edgex-support-notifications
  Clients_Metadata_Host: edgex-core-metadata
  Clients_Command_Host: edgex-core-command
  Clients_Scheduler_Host: edgex-support-scheduler
  Clients_RulesEngine_Host: edgex-kuiper
  # Clients_VirtualDevice_Host: edgex-device-virtual
  Databases_Primary_Host: edgex-redis
  Logging_EnableRemote: "false"

volumes:
  db-data:
  log-data:
  consul-config:
  consul-data:
  persist:
  mqtt-bridge-data:
  mqtt-bridge-logs:
  node-red-data:

services:
  consul:
    image: edgexfoundry/docker-edgex-consul:1.2.0
    ports:
      - "8400:8400"
      - "8500:8500"
    container_name: edgex-core-consul
    hostname: edgex-core-consul
    networks:
      - edgex-network
    volumes:
      - consul-config:/consul/config:z
      - consul-data:/consul/data:z
    environment:
      - EDGEX_DB=redis
      - EDGEX_SECURE=false

  redis:
    image: redis:5.0.8-alpine
    ports:
      - "6379:6379"
    container_name: edgex-redis
    hostname: edgex-redis
    networks:
      - edgex-network
    environment:
      <<: *common-variables
    volumes:
      - db-data:/data:z

  system:
    image: edgexfoundry/docker-sys-mgmt-agent-go:1.2.1
    ports:
      - "48090:48090"
    container_name: edgex-sys-mgmt-agent
    hostname: edgex-sys-mgmt-agent
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-sys-mgmt-agent
      ExecutorPath: /sys-mgmt-executor
      MetricsMechanism: executor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
    depends_on:
      - consul
      - scheduler
      - notifications
      - metadata
      - data
      - command

  notifications:
    image: edgexfoundry/docker-support-notifications-go:1.2.1
    ports:
      - "48060:48060"
    container_name: edgex-support-notifications
    hostname: edgex-support-notifications
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-support-notifications
    depends_on:
      - consul
      - redis

  metadata:
    image: edgexfoundry/docker-core-metadata-go:1.2.1
    ports:
      - "48081:48081"
    container_name: edgex-core-metadata
    hostname: edgex-core-metadata
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-core-metadata
      Service_Timeout: "20000"
      Notifications_Sender: edgex-core-metadata
    depends_on:
      - consul
      - redis
      - notifications

  data:
    image: edgexfoundry/docker-core-data-go:1.2.1
    ports:
      - "48080:48080"
      - "5563:5563"
    container_name: edgex-core-data
    hostname: edgex-core-data
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-core-data
    depends_on:
      - consul
      - redis
      - metadata

  command:
    image: edgexfoundry/docker-core-command-go:1.2.1
    ports:
      - "48082:48082"
    container_name: edgex-core-command
    hostname: edgex-core-command
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-core-command
    depends_on:
      - consul
      - redis
      - metadata

  scheduler:
    image: edgexfoundry/docker-support-scheduler-go:1.2.1
    ports:
      - "48085:48085"
    container_name: edgex-support-scheduler
    hostname: edgex-support-scheduler
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-support-scheduler
      IntervalActions_ScrubPushed_Host: edgex-core-data
      IntervalActions_ScrubAged_Host: edgex-core-data
    depends_on:
      - consul
      - redis

  # app-service-rules:
  #   image: edgexfoundry/docker-app-service-configurable:1.2.0
  #   ports:
  #     - "48100:48100"
  #   container_name: edgex-app-service-configurable-rules
  #   hostname: edgex-app-service-configurable-rules
  #   networks:
  #     - edgex-network
  #   environment:
  #     <<: *common-variables
  #     edgex_profile: rules-engine
  #     Service_Host: edgex-app-service-configurable-rules
  #     Service_Port: 48100
  #     MessageBus_SubscribeHost_Host: edgex-core-data
  #     Binding_PublishTopic: events
  #   depends_on:
  #     - consul
  #     - data

  # rulesengine:
  #   image: emqx/kuiper:0.4.2-alpine
  #   ports:
  #     - "48075:48075"
  #     - "20498:20498"
  #   container_name: edgex-kuiper
  #   hostname: edgex-kuiper
  #   networks:
  #     - edgex-network
  #   environment:
  #     # KUIPER_DEBUG: "true"
  #     KUIPER_CONSOLE_LOG: "true"
  #     KUIPER_REST_PORT: 48075
  #     EDGEX_SERVER: edgex-app-service-configurable-rules
  #     EDGEX_SERVICE_SERVER: http://edgex-core-data:48080
  #     EDGEX_TOPIC: events
  #     EDGEX_PROTOCOL: tcp
  #     EDGEX_PORT: 5566
  #   depends_on:
  #     - app-service-rules

  #################################################################
  # Device Services
  #################################################################

  # device-virtual:
  #   image: edgexfoundry/docker-device-virtual-go:1.2.2
  #   ports:
  #     - "49990:49990"
  #   container_name: edgex-device-virtual
  #   hostname: edgex-device-virtual
  #   networks:
  #     - edgex-network
  #   environment:
  #     <<: *common-variables
  #     Service_Host: edgex-device-virtual
  #   depends_on:
  #     - consul
  #     - data
  #     - metadata

  # device-rest:
  #   image: edgexfoundry/docker-device-rest-go:1.1.1
  #   ports:
  #     - "49986:49986"
  #   container_name: edgex-device-rest
  #   hostname: edgex-device-rest
  #   networks:
  #     - edgex-network
  #   environment:
  #     <<: *common-variables
  #     Service_Host: edgex-device-rest
  #   depends_on:
  #     - data
  #     - command

  device-random:
    image: edgexfoundry/docker-device-random-go:1.2.1
    ports:
      - "49988:49988"
    container_name: edgex-device-random
    hostname: edgex-device-random
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-device-random
    depends_on:
      - data
      - command

  device-mqtt:
    image: edgexfoundry/docker-device-mqtt-go:1.2.1
    ports:
      - "49982:49982"
    container_name: edgex-device-mqtt
    hostname: edgex-device-mqtt
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-device-mqtt
    volumes:
      - ./mqtt:/custom-config
    depends_on:
      - data
      - command
      - consul
      - mqtt-bridge
    entrypoint:
      - /device-mqtt
      - --registry=consul://edgex-core-consul:8500
      - --confdir=/custom-config

  mqtt-bridge:
    container_name: mqtt-bridge
    hostname: mqtt-bridge
    image: eclipse-mosquitto
    depends_on:
      - node-red
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - mqtt-bridge-data:/mosquitto/data
      - mqtt-bridge-logs:/mosquitto/log
    networks:
      - edgex-network

  node-red:
    container_name: node-red
    image: nodered/node-red:latest
    ports:
      - "1880:1880"
    volumes:
      - node-red-data:/data
    networks:
      - edgex-network
    environment:
      - TZ=Europe/Amsterdam

  # device-modbus:
  #   image: edgexfoundry/docker-device-modbus-go:1.2.1
  #   ports:
  #     - "49991:49991"
  #   container_name: edgex-device-modbus
  #   hostname: edgex-device-modbus
  #   networks:
  #     - edgex-network
  #   environment:
  #     <<: *common-variables
  #     Service_Host: edgex-device-modbus
  #   depends_on:
  #     - data
  #     - command
  # device-snmp:
  #   image: edgexfoundry/docker-device-snmp-go:1.2.1
  #   ports:
  #     - "49993:49993"
  #   container_name: edgex-device-snmp
  #   hostname: edgex-device-snmp
  #   networks:
  #     - edgex-network
  #   environment:
  #     <<: *common-variables
  #     Service_Host: edgex-device-snmp
  #   depends_on:
  #     - data
  #     - commandservices:
  # edgex-restapp:
  #   image: mmomper/edgex-restapp
  #   container_name: edgex-app-service-rest
  #   hostname: edgex-app-service-rest
  #   ports:
  #     - 8080:8080
  #     - 8443:8443
  #   networks:
  #     - edgex-network
  #   volumes:
  #     - persist:/persist
  #   environment:
  #     ADMIN_USERNAME: admin
  #     ADMIN_PASSWORD: "strongpassword"
  #     CLIENT_COREDATA_HOST: edgex-core-data
  #     CLIENT_COREMETADATA_HOST: edgex-core-metadata
  #     CLIENT_CORECOMMAND_HOST: edgex-core-command

networks:
  edgex-network:
    driver: "bridge"
    name: edgex-network
